@model HuntControl.Domain.Concrete.spr_employees
<link href="~/Content/plugins/animate.less/animate.min.css" rel="stylesheet" type="text/css">
<link href="~/Content/plugins/switchery/dist/switchery.min.css" rel="stylesheet">
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/Scripts/jquery.custom.validate.js"></script>
<script src="~/Content/plugins/switchery/dist/switchery.min.js"></script>
<script src="~/Content/plugins/select2/js/select2.full.min.js"></script>
<script src="~/Content/plugins/bootstrap-select/dist/js/bootstrap-select.min.js" type="text/javascript"></script>
<script src="~/Content/plugins/notifyjs/dist/notify.min.js"></script>
<script src="~/Content/plugins/notifications/notify-metro.js"></script>
<script>
    $(document).ready(function () {
        $('.selectpicker').selectpicker();
        $('input[data-type=date]').datepicker({ format: 'dd.mm.yyyy', autoclose: true, language: 'ru' });
        $(".select2").select2();

        $('input[data-type=doc-snils]').inputmask({
            mask: '999-999-999 99',
            clearIncomplete: true
        });


        $('button[data-type=btnGetSnils]').on('click', function () {
            var button = $(this);
            var customerFioElement = $('input[name="employees_fio"]');
            var customerSexElement = $('select[name="employees_sex"]');
            var customerBirthDateElement = $('input[name="date_birth"]');
            if (customerFioElement.valid() > 0 && customerBirthDateElement.valid() > 0) {
                var customerFio = customerFioElement.val();
                var customerSex = customerSexElement.val();
                var customerBirthDate = customerBirthDateElement.val();
                var arr = customerFio.split(' ');
                $.ajax({
                    url: '@Url.Action("GetCustomerSnils", "Case")',
                    type: 'POST',
                    data:
                    {
                        FirstName: arr[1],
                        LastName: arr[2],
                        SecondName: arr[0],
                        gender: customerSex,
                        birthDate: customerBirthDate,
                    },
                    success: function (snils) {
                        $('input[data-type=doc-snils]').val(snils);
                        $('input[data-type=doc-snils]').prop('disabled', false);
                        $.Notification.notify('success', 'top right', 'Найден СНИЛС', snils);
                    },
                    beforeSend: function () {
                        $('input[data-type=doc-snils]').prop('disabled', true);
                        button.find('i').addClass("fa-spin");
                    },
                    complete: function () {
                        button.find('i').removeClass("fa-spin");
                    },
                    error: function (data) {
                        $.Notification.notify('error', 'top right', data.responseText);
                    }
                });
            } else {
                if (customerFioElement.valid() == 0) {
                    customerFioElement.addClass('shake animated').one('webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend', function () {
                        $(this).removeClass('shake animated');
                    });
                }
                if (customerBirthDateElement.valid() == 0) {
                    customerBirthDateElement.closest('.input-group').addClass('shake animated').one('webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend', function () {
                        $(this).removeClass('shake animated');
                    });
                }
            }
        });
    });
</script>
<div class="modal-dialog modal-lg">
    <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
            <h4 class="modal-title" id="myLargeModalLabel">Добавление сотрудника</h4>
        </div>
        <div class="modal-body">

            @using (Ajax.BeginForm("SubmitEmployeeSave", "Reference", Model, new AjaxOptions { UpdateTargetId = "employeesContainer", OnSuccess = "$('#myModal').modal('hide');" }, new { @id = "AddEmployeeForm", @class = "form-horizontal" }))
            {
                <div class="form-group form-group-sm">
                    <label class="col-md-4 control-label text-right">Должность</label>
                    <div class="col-md-6">
                        @Html.DropDownListFor(model => model.spr_employees_job_pos_id, ViewBag.EmployeeJobPos as SelectList, new Dictionary<string, object> { { "class", "selectpicker" }, { "data-style", "btn-white btn-sm" } })
                    </div>
                </div>
                <div class="form-group form-group-sm">
                    <label class="col-md-4 control-label text-right">Отдел</label>
                    <div class="col-md-6">
                        @Html.DropDownListFor(model => model.spr_employees_department_id, ViewBag.EmployeeDepartments as SelectList, "-- Выберите отдел --", new Dictionary<string, object> { { "class", "selectpicker" }, { "data-style", "btn-white btn-sm" } })
                    </div>
                </div>
                <div class="form-group form-group-sm">
                    <label class="col-md-4 control-label text-right">ФИО</label>
                    <div class="col-md-6">
                        @Html.TextBoxFor(model => model.employees_fio, new Dictionary<string, object> { { "class", "form-control" }, { "placeholder", "Введите ФИО" }, { "required", "required" } })
                    </div>
                </div>
                <div class="form-group form-group-sm">
                    <label class="col-md-4 control-label text-right">Пол</label>
                    <div class="col-md-3">
                        @Html.DropDownListFor(model => model.employees_sex, new SelectList(new List<SelectListItem> { new SelectListItem { Text = "Мужской", Value = "Муж" }, new SelectListItem { Text = "Женский", Value = "Жен" } }, "Value", "Text"), new Dictionary<string, object> { { "class", "selectpicker" }, { "data-style", "btn-white btn-sm" } })
                    </div>
                </div>
                <div class="form-group form-group-sm">
                    <label class="col-md-4 control-label text-right">Дата рождения</label>
                    <div class="col-md-3">
                        <div class="input-group">
                            @Html.TextBox("date_birth", "", new Dictionary<string, object> { { "class", "form-control" }, { "placeholder", "__.__.____" }, { "data-type", "date" } })
                            <span class="input-group-addon bg-custom b-0 text-white"><i class="fa fa-calendar"></i></span>
                        </div>
                    </div>
                </div>
                <div class="form-group form-group-sm">
                    <label class="col-md-4 control-label text-right">СНИЛС</label>
                    <div class="col-md-3">
                        <div class="input-group m-b-15">
                            @Html.TextBoxFor(model => model.snils, new Dictionary<string, object> { { "class", "form-control" }, { "placeholder", "___.___.___ __" }, { "data-type", "doc-snils" } })
                            <span class="input-group-btn">
                                <button type="button" data-type="btnGetSnils" data-form="customer" class="btn waves-effect waves-light btn-default"><i class="fa fa-globe font-18"></i></button>
                            </span>
                        </div>
                    </div>
                </div>
                <h3 class="panel-title">Учетные данные</h3>
                <hr class="m-t-10" />
                <div class="form-group form-group-sm">
                    <label class="col-md-4 control-label text-right">Логин</label>
                    <div class="col-md-3">
                        @Html.TextBoxFor(model => model.employees_login, new Dictionary<string, object> { { "class", "form-control" }, { "placeholder", "Введите логин" }, { "required", "required" } })
                    </div>
                    <div class="col-md-3">
                        <div id="employees_login_check" class="control-label "></div>
                    </div>
                </div>
                <div class="form-group form-group-sm">
                    <label class="col-md-4 control-label text-right">Пароль</label>
                    <div class="col-md-3">
                        <div class="input-group m-b-15">
                            @Html.TextBoxFor(model => model.employees_pass, new Dictionary<string, object> { { "class", "form-control" }, { "required", "required" } })
                            <span class="input-group-btn">
                                <button type="button" class="btn waves-effect waves-light btn-default"><i class="fa fa-key font-18"></i></button>
                            </span>
                        </div>
                    </div>
                </div>
                <h3 class="panel-title">Контактные данные</h3>
                <hr class="m-t-10" />
                <div class="form-group form-group-sm m-b-5">
                    <label class="col-md-4 control-label text-right">Телефон</label>
                    <div class="col-md-3">
                        @Html.TextBoxFor(model => model.phone_number1, new Dictionary<string, object> { { "class", "form-control m-b-10" }, { "placeholder", "+7(___) ___-____" }, { "data-type", "phone-number" } })
                    </div>
                    <div class="col-md-3">
                        @Html.TextBoxFor(model => model.phone_number2, new Dictionary<string, object> { { "class", "form-control m-b-10" }, { "placeholder", "+7(___) ___-____" }, { "data-type", "phone-number" } })
                    </div>
                </div>
                <div class="form-group form-group-sm">
                    <label class="col-md-4 control-label text-right">Электронная почта</label>
                    <div class="col-md-6">
                        @Html.TextBoxFor(model => model.e_mail, new Dictionary<string, object> { { "class", "form-control" } })
                    </div>
                </div>
            }
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-cancel waves-effect waves-light btn-block-xs" data-dismiss="modal"><i class="fa fa-times m-r-5"></i> Отмена</button>
            <button type="submit" form="AddEmployeeForm" class="btn btn-success waves-effect waves-light btn-block-xs"> Сохранить <i class="fa fa-check m-l-5"></i></button>
        </div>
    </div><!-- /.modal-content -->
</div><!-- /.modal-dialog -->
<script>
    $('#employees_login').on('change', function () {
        if ($(this).val() != '') {
            $.ajax({
                type: 'POST',
                data: { id: $('#id').val(), employees_login: $('#employees_login').val() },
                url: '@Url.Action("CheckLogin", "Reference")',
                beforeSend: function () {
                    $('#employees_login_check').html('Идет проверка');
                },
                success: function (data) {
                    if (!data) {
                        $('#employees_login').addClass('parsley-error');
                        $('#employees_login_check').html('Логин уже занят!');
                        $('#myModal button[type="submit"]').attr('disabled', 'disabled');
                    } else {
                        $('#employees_login_check').html('Логин свободен!');
                        $('#employees_login').removeClass('parsley-error');
                        $('#myModal button[type="submit"]').removeAttr('disabled');
                    }
                }
            });
        }
        else {
            $('#employees_login_check').html('');
            $('#employees_login').removeClass('parsley-error');
            $('#myModal button[type="submit"]').removeAttr('disabled');
        }
    })
</script>